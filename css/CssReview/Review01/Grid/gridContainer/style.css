.grid__container {
  border: 5px solid black;
  padding: 10px;
}

h2 {
  font-size: 60px;
  text-align: center;
}

.grid__item {
  width: 100px;
  font-size: 50px;
  background-color: blue;
  color: #fff;
  border: 2.5px solid red;
}

/* display: grid; */

/* Define el elemento como un contenedor de cuadrícula y establece un nuevo contexto de formato de cuadrícula para su contenido. */

/* Valores:

grid – genera una grilla a nivel de bloque
inline-grid – genera una cuadrícula de nivel en línea */

.grid__container1 {
  display: grid;
}

.grid__container2 {
  display: inline-grid;
}

/* grid-template-columns
grid-template-rows */

/*
Define las columnas y filas de la cuadrícula con una lista de valores separados por espacios. Los valores representan el tamaño de la pista y el espacio entre ellos representa la línea de cuadrícula.

Valores:

<track-size> – puede ser una longitud, un porcentaje o una fracción del espacio libre en la cuadrícula (usando la  fr unidad)
<line-name> – un nombre arbitrario de su elección */

/* A las líneas de cuadrícula se les asignan automáticamente números positivos a partir de estas asignaciones (siendo -1 una alternativa para la última fila). */

.grid__container3 {
  display: grid;
  grid-template-columns: 150px 250px 1fr;
  grid-template-rows: 150px 250px 350px;
  margin-bottom: 30px;
}

.grid__container4 .grid__item {
  width: auto;
}

/* Pero puede optar por nombrar explícitamente las líneas. Tenga en cuenta la sintaxis de paréntesis para los nombres de línea: */

/* Tenga en cuenta que una línea puede tener más de un nombre. */

.grid__container4 {
  display: grid;
  grid-template-columns: [first] 60px [line2] 50px [line3] auto [col4-start] 50px [five] 80px [end];
  grid-template-rows: [row1-start] 80px [row1-end] 160px [third-line] auto [last-line];
  margin-bottom: 30px;
}

/* Si varias líneas comparten el mismo nombre, se puede hacer referencia a ellas por su nombre de línea y número.

.item {
  grid-column-start: col-start 2;
} */

/* Si su definición contiene partes repetidas, puede usar la  repeat() notación para simplificar las cosas: */

/* La  fr unidad le permite establecer el tamaño de una pista como una fracción del espacio libre del contenedor de cuadrícula. Por ejemplo, esto establecerá cada elemento en un tercio del ancho del contenedor de la cuadrícula: */

/* El espacio libre se calcula  después de  cualquier elemento no flexible. */

.grid__container5 {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  /* Que es equivalente a esto: */
  /* grid-template-columns: 1fr 1fr 1fr; */
  grid-template-rows: repeat(3, 100px);
  /* Que es equivalente a esto: */
  /* grid-template-rows: 100px 100px 100px; */
}

/* grid-template-areas

Define una plantilla de cuadrícula haciendo referencia a los nombres de las áreas de cuadrícula que se especifican con la  grid-area propiedad. Repetir el nombre de un área de cuadrícula hace que el contenido abarque esas celdas. Un punto significa una celda vacía. La sintaxis en sí proporciona una visualización de la estructura de la cuadrícula.

Valores:

<grid-area-name> – el nombre de un área de cuadrícula especificada con grid-area
. – un punto significa una celda de cuadrícula vacía
none – no se definen áreas de cuadrícula */

/* Eso creará una cuadrícula de cuatro columnas de ancho por tres filas de alto. Toda la fila superior estará compuesta por el  área del encabezado  . La fila del medio estará compuesta por dos  áreas principales  , una celda vacía y un  área de barra lateral  . La última fila es todo  pie de página . */

.grid__container6 {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: auto;
  grid-template-areas:
    "header header header header"
    "main main . sidebar"
    "footer footer footer footer";
}

.grid__container6 .grid__item {
  width: auto;
  text-align: center;
}

.grid__container6 .grid__item:nth-child(1) {
  grid-area: header;
}
.grid__container6 .grid__item:nth-child(2) {
  grid-area: main;
}
.grid__container6 .grid__item:nth-child(3) {
  grid-area: sidebar;
}
.grid__container6 .grid__item:nth-child(4) {
  grid-area: footer;
}

/* Cada fila de su declaración debe tener el mismo número de celdas.

Puede usar cualquier número de puntos adyacentes para declarar una sola celda vacía. 
Siempre que los puntos no tengan espacios entre ellos, representan una sola celda.

Tenga en cuenta que no está nombrando líneas con esta sintaxis, solo áreas. 
Cuando usa esta sintaxis, las líneas en cada extremo de las áreas en realidad se nombran automáticamente. 
Si el nombre de su área de cuadrícula es  foo , el nombre de la línea de fila inicial y la línea de columna inicial del área será  foo -start , 
y el nombre de su última línea de fila y última línea de columna será  foo -end . 
Esto significa que algunas líneas pueden tener varios nombres, como la línea del extremo izquierdo en el ejemplo anterior, 
que tendrá tres nombres: inicio de encabezado, inicio principal e inicio de pie de página. */
