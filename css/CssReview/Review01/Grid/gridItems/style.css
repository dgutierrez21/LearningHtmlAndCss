/* grid-column-start, grid-column-end, 
grid-row-start and grid-row-end */

/* Determina la ubicación de un elemento de cuadrícula dentro de la cuadrícula haciendo referencia a líneas de cuadrícula específicas. grid-column-start/ grid-row-start es la línea donde comienza el elemento y  grid-column-end/ grid-row-end es la línea donde termina el elemento.

Valores:

<line> – puede ser un número para hacer referencia a una línea de cuadrícula numerada o un nombre para hacer referencia a una línea de cuadrícula con nombre
span <number>– el elemento abarcará el número proporcionado de pistas de cuadrícula
span <name>– el elemento se extenderá hasta que llegue a la siguiente línea con el nombre proporcionado
auto– indica colocación automática, un intervalo automático o un intervalo predeterminado de uno */

h2 {
  font-size: 50px;
  text-align: center;
}

.grid__item {
  background-color: crimson;
  color: #fff;
  font-size: 60px;
  border: 4px solid black;
  text-align: center;
}

.grid__container {
  border: 5px solid black;
  padding: 10px;
}

.grid__container1 {
  display: grid;
  gap: 10px;
  grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
  grid-auto-flow: column;
  grid-auto-rows: 100px;
}

.grid__container1 .grid__item:nth-child(2) {
  grid-column-start: 2;
  grid-column-end: 3;

  grid-row-start: 2;
  grid-row-end: 5;
}
.grid__container1 .grid__item:nth-child(3) {
  grid-column-start: 3;
  grid-column-end: span 1;

  grid-row-start: 3;
  grid-row-end: 7;
}
.grid__container1 .grid__item:nth-child(1) {
  grid-column-start: 4;
  grid-column-end: span 1;

  grid-row-start: 4;
  grid-row-end: span 5;
}
.grid__container1 .grid__item:nth-child(4) {
  grid-row-start: 1;
  grid-row-end: span 2;
}

/* Abreviatura de  grid-column-start +  grid-column-endy  grid-row-start +  grid-row-end, respectivamente.

Valores:

<start-line> / <end-line>  – cada uno acepta los mismos valores que la versión manual, incluido el intervalo */

/* Si no se declara ningún valor de línea final, el elemento abarcará 1 pista de forma predeterminada. */

.grid__container2 {
  display: grid;
  gap: 10px;
  grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
  grid-auto-flow: column;
  grid-auto-rows: 100px;
}

.grid__container2 .grid__item:nth-child(2) {
  grid-column: 2 / 3;

  grid-row: 2 / 5;
}
.grid__container2 .grid__item:nth-child(3) {
  grid-column: 3; /* Si no se declara ningún valor de línea final, el elemento abarcará 1 pista de forma predeterminada. */

  grid-row: 3 / 7;
}
.grid__container2 .grid__item:nth-child(1) {
  grid-column: 4; /* Si no se declara ningún valor de línea final, el elemento abarcará 1 pista de forma predeterminada. */

  grid-row: 4 / span 5;
}
.grid__container2 .grid__item:nth-child(4) {
  grid-row: 1 / span 2;
}

/* grid-area

Asigna un nombre a un elemento para que pueda ser referenciado por una plantilla creada con la  grid-template-areas propiedad. Alternativamente, esta propiedad se puede usar como una abreviatura aún más corta para  grid-row-start +  grid-column-start +  grid-row-end +  grid-column-end.

Valores:

<name> – un nombre de su elección
<row-start> /  <column-start> /  <row-end> / <column-end>  – pueden ser números o líneas nombradas */

.grid__container3 {
  display: grid;
  gap: 10px;
  grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
  grid-template-areas:
    "item4 . . ."
    "item4 item2 . ."
    ". item2 . ."
    ". item2 . .";
  grid-auto-flow: column;
  grid-auto-rows: 100px;
}

.grid__container3 .grid__item:nth-child(2) {
  grid-area: item2;
}
.grid__container3 .grid__item:nth-child(3) {
  grid-area: 3 / 3 / 7 / 4;
}
.grid__container3 .grid__item:nth-child(1) {
  grid-area: 4 / 4 / span 5 / 5;
}
.grid__container3 .grid__item:nth-child(4) {
  grid-area: item4;
}
