/* grid-column-start, grid-column-end, 
grid-row-start and grid-row-end */

/* Determina la ubicación de un elemento de cuadrícula dentro de la cuadrícula haciendo referencia a líneas de cuadrícula específicas. grid-column-start/ grid-row-start es la línea donde comienza el elemento y  grid-column-end/ grid-row-end es la línea donde termina el elemento.

Valores:

<line> – puede ser un número para hacer referencia a una línea de cuadrícula numerada o un nombre para hacer referencia a una línea de cuadrícula con nombre
span <number>– el elemento abarcará el número proporcionado de pistas de cuadrícula
span <name>– el elemento se extenderá hasta que llegue a la siguiente línea con el nombre proporcionado
auto– indica colocación automática, un intervalo automático o un intervalo predeterminado de uno */

h2 {
  font-size: 50px;
  text-align: center;
}

.grid__item {
  background-color: crimson;
  color: #fff;
  font-size: 60px;
  border: 4px solid black;
  text-align: center;
}

.grid__container {
  border: 5px solid black;
  padding: 10px;
}

.grid__container1 {
  display: grid;
  gap: 10px;
  grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
  grid-auto-flow: column;
  grid-auto-rows: 100px;
}

.grid__container1 .grid__item:nth-child(2) {
  grid-column-start: 2;
  grid-column-end: 3;

  grid-row-start: 2;
  grid-row-end: 5;
}
.grid__container1 .grid__item:nth-child(3) {
  grid-column-start: 3;
  grid-column-end: span 1;

  grid-row-start: 3;
  grid-row-end: 7;
}
.grid__container1 .grid__item:nth-child(1) {
  grid-column-start: 4;
  grid-column-end: span 1;

  grid-row-start: 4;
  grid-row-end: span 5;
}
.grid__container1 .grid__item:nth-child(4) {
  grid-row-start: 1;
  grid-row-end: span 2;
}

/* Abreviatura de  grid-column-start +  grid-column-endy  grid-row-start +  grid-row-end, respectivamente.

Valores:

<start-line> / <end-line>  – cada uno acepta los mismos valores que la versión manual, incluido el intervalo */

/* Si no se declara ningún valor de línea final, el elemento abarcará 1 pista de forma predeterminada. */

.grid__container2 {
  display: grid;
  gap: 10px;
  grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
  grid-auto-flow: column;
  grid-auto-rows: 100px;
}

.grid__container2 .grid__item:nth-child(2) {
  grid-column: 2 / 3;

  grid-row: 2 / 5;
}
.grid__container2 .grid__item:nth-child(3) {
  grid-column: 3; /* Si no se declara ningún valor de línea final, el elemento abarcará 1 pista de forma predeterminada. */

  grid-row: 3 / 7;
}
.grid__container2 .grid__item:nth-child(1) {
  grid-column: 4; /* Si no se declara ningún valor de línea final, el elemento abarcará 1 pista de forma predeterminada. */

  grid-row: 4 / span 5;
}
.grid__container2 .grid__item:nth-child(4) {
  grid-row: 1 / span 2;
}

/* grid-area

Asigna un nombre a un elemento para que pueda ser referenciado por una plantilla creada con la  grid-template-areas propiedad. Alternativamente, esta propiedad se puede usar como una abreviatura aún más corta para  grid-row-start +  grid-column-start +  grid-row-end +  grid-column-end.

Valores:

<name> – un nombre de su elección
<row-start> /  <column-start> /  <row-end> / <column-end>  – pueden ser números o líneas nombradas */

.grid__container3 {
  display: grid;
  gap: 10px;
  grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
  grid-template-areas:
    "item4 . . ."
    "item4 item2 . ."
    ". item2 . ."
    ". item2 . .";
  grid-auto-flow: column;
  grid-auto-rows: 100px;
}

.grid__container3 .grid__item:nth-child(2) {
  grid-area: item2;
}
.grid__container3 .grid__item:nth-child(3) {
  grid-area: 3 / 3 / 7 / 4;
}
.grid__container3 .grid__item:nth-child(1) {
  grid-area: 4 / 4 / span 5 / 5;
}
.grid__container3 .grid__item:nth-child(4) {
  grid-area: item4;
}

/* justify-self

/* Alinea un elemento de cuadrícula dentro de una celda a lo largo del  eje en línea (fila)  (a diferencia de  align-self lo que se alinea a lo largo del  eje de bloque (columna)  ). Este valor se aplica a un elemento de cuadrícula dentro de una sola celda.

Valores:

start – alinea el elemento de la cuadrícula para que quede al ras con el borde inicial de la celda
end – alinea el elemento de la cuadrícula para que quede al ras con el borde final de la celda
center – alinea el elemento de la cuadrícula en el centro de la celda
stretch – llena todo el ancho de la celda (este es el valor predeterminado) */

.grid__container4 {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 60px;
}

.grid__container4 .grid__item:nth-child(1) {
  justify-self: stretch; /* default value */
}

.grid__container4 .grid__item:nth-child(2) {
  justify-self: start;
}

.grid__container4 .grid__item:nth-child(3) {
  justify-self: end;
}

.grid__container4 .grid__item:nth-child(4) {
  justify-self: center;
}

/* Para establecer la alineación de  todos  los elementos de una cuadrícula, este comportamiento también se puede establecer en el contenedor de la cuadrícula a través de la  justify-items propiedad. */

/* align-self

Alinea un elemento de cuadrícula dentro de una celda a lo largo del eje del  bloque (columna)  (a diferencia de  justify-self lo que se alinea a lo largo del  eje en línea (fila)  ). Este valor se aplica al contenido dentro de un único elemento de cuadrícula.

Valores:

start – alinea el elemento de la cuadrícula para que quede al ras con el borde inicial de la celda
end – alinea el elemento de la cuadrícula para que quede al ras con el borde final de la celda
center – alinea el elemento de la cuadrícula en el centro de la celda
stretch – llena toda la altura de la celda (este es el valor predeterminado) */

.grid__container5 {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: 500px;
  gap: 60px;
}

.grid__container5 .grid__item:nth-child(1) {
  align-self: stretch; /* default value */
}

.grid__container5 .grid__item:nth-child(2) {
  align-self: start;
}

.grid__container5 .grid__item:nth-child(3) {
  align-self: end;
}

.grid__container5 .grid__item:nth-child(4) {
  align-self: center;
}

/* Para alinear  todos  los elementos en una cuadrícula, este comportamiento también se puede configurar en el contenedor de la cuadrícula a través de la  align-items propiedad. */

/* place-self

place-self establece las  propiedades align-self y  justify-self en una sola declaración.

Valores:

auto – La alineación “predeterminada” para el modo de diseño.
<align-self> / <justify-self>  – El primer valor establece  align-self, el segundo valor  justify-self. Si se omite el segundo valor, el primer valor se asigna a ambas propiedades. */

/* Todos los principales navegadores, excepto Edge, admiten la  place-self propiedad abreviada. */

.grid__container6 {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: 500px;
  gap: 60px;
}

.grid__container6 .grid__item:nth-child(1) {
  place-self: stretch; /* default value */
}

.grid__container6 .grid__item:nth-child(2) {
  place-self: end start;
}

.grid__container6 .grid__item:nth-child(3) {
  place-self: start end;
}

.grid__container6 .grid__item:nth-child(4) {
  place-self: center;
}
